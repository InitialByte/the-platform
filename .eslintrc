{
  "extends": [
    "eslint:recommended",
    "airbnb-typescript",
    "plugin:react/recommended",
    "plugin:promise/recommended",
    "plugin:sonarjs/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "tsconfigRootDir": "./",
    "project": "tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "es2015": true,
    "es2017": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".tsx",
          ".js",
          ".jsx"
        ]
      }
    }
  },
  "plugins": [
    "@typescript-eslint",
    "optimize-regex",
    "react-hooks",
    "promise",
    "sonarjs",
    "import",
    "react"
  ],
  "rules": {
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-duplicates": "off",
    "import/no-named-default": "off",
    "import/extensions": [
      "error",
      {
        "ts": "never",
        "json": "always"
      }
    ],
    "no-console": [
      "error", {
        "allow": ["error", "log"]
      }
    ],
    "implicit-arrow-linebreak": "off",
    "props-no-spreading": "off",
    "object-curly-newline": "off",
    "no-param-reassign": ["error", { "props": false }],
    "function-paren-newline": ["off"],
    "object-curly-spacing": [1, "never"],
    "array-bracket-spacing": [1, "never"],
    "operator-linebreak": "off",
    "max-len": ["error", 100, 2, {
      "ignoreRegExpLiterals": true,
      "ignoreComments": false,
      "ignoreUrls": true
    }],
    "indent": "off",
    "no-confusing-arrow": "off",
    /* "indent": ["error", 2, {
      "SwitchCase": 1
    }], */

    "optimize-regex/optimize-regex": "warn",

    "react/jsx-filename-extension": [1, {
      "extensions": [".tsx"]
    }],
    "react/jsx-closing-bracket-location": ["warn", {"selfClosing": "line-aligned", "nonEmpty": "after-props"}],
    "react/jsx-no-literals": ["warn", {"ignoreProps": true}],
    "react/no-access-state-in-setstate": "error",
    "react/prefer-stateless-function": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-props-no-spreading": "off",
    "react/destructuring-assignment": "off",
    "react/jsx-indent-props": ["error", 2],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/state-in-constructor": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-pascal-case": "error",
    "react/jsx-indent": ["error", 2],
    "react/no-this-in-sfc": "error",
    "react/no-multi-comp": "error",
    "react/jsx-uses-react": "off",
    "react/display-name": "error",
    "react/jsx-no-bind": "error",
    "react/no-danger": "error",
    "react/prop-types": "off",

    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "comma",
          "requireLast": true
        },
        "singleline": {
            "delimiter": "comma",
            "requireLast": true
        },
        "overrides": {
            "interface": {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                }
            }
        }
      }
    ],
    "@typescript-eslint/ban-types": ["error", {
      "types": {
          "Object": {
            "message": "Describe your object"
          },
          "Function": {
            "message": "Describe your function"
          },
          "String": {
              "message": "Use string instead",
              "fixWith": "string"
          }
      }
    }],
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignoreReadonlyClassProperties": true,
        "ignore": [0, 1, -1, 24, 60, 1000],
        "ignoreNumericLiteralTypes": true,
        "enforceConst": true,
        "ignoreEnums": true
      }
    ],
    "@typescript-eslint/typedef": [
      "error",
      {
        "memberVariableDeclaration": true,
        "propertyDeclaration": true,
        "arrowParameter": false,
        "parameter": true
      }
    ],
    "@typescript-eslint/quotes": [
      "error", "single", {
        "avoidEscape": true
      }
    ],

    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_$"
      }
    ],
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    "@typescript-eslint/no-parameter-properties": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/brace-style": ["error", "1tbs"],
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-extra-parens": ["error"],
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/member-ordering": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/indent": "off"
  }
}
